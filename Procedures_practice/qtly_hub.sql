select current_database(); ---SCDP_DW_DEV_DB

select current_schema(); --SUPPLY CHAIN 

select current_warehouse(); --SCDP_DM_PP_DB_ETL_WH 

select current_role(); --SCDP_DW_DEV_DB_DEV

desc database SDCP_DW_DEV_DB;

truncate table SCDP_DW_DEV_DB.SUPPLY_CHAIN.QLTY_SAT;

call PROC_QLTY_SAT_QNET('DEV', 1000);

select * from SCDP_DW_DEV_DB.UTIL.SCDP_PROCESS_LOG where job_id='10000';

select from SCDP_DW DEV_DB.SUPPLY_CHAIN.TEMP_QLTY_SAT_QNET:

select count(*) from SCDP_DW_DEV_DB.SUPPLY_CHAIN.QLTY_SAT; --10513782

select count(*) from SCDP_DL_DEV_DB.DB2.Z1QN001S_QNET_FAC_MO_RCPT_REJ_VW RCPT; -- 9710041

CREATE OR REPLACE PROCEDURE SDCP_DW_DEV_DB.SUPPLY_CHAIN.PROC_QLTY_SAT_QNET("ENV" VARCHAR(16777216), "JOB ID" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS 'DECLARE
    SAT_REC_STR VARCHAR DEFAULT '''';
    SAT_INS_STR VARCHAR DEFAULT '''';
    SAT_INS1_STR VARCHAR DEFAULT '''';
    ROWCOUNT VARCHAR DEFAULT '''';
    LOG_STR VARCHAR DEFAULT '''';
    PROCESS_START_TIME TIMESTAMP;
    BEGIN

    /*PURPOSE THIS PROCEDURE POPULATES DATA INTO DATA WAREHOUSE TABLE QLTY SAT FOR ONET INTERFACE. SOURCE TABLE IS EPDP_PO_DM_VW, BDV_NTWX_NODE_HUB, Z1QN001$_ONET_MATL_REJ_VW */

    SELECT TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP(5))) INTO  PROCESS_START_TIME;

LOG_STR := ''EXECUTION OF SUPPLY_CHAIN.PROC_QLTY_SAT_QNET IS INITIATED 
IN ''||:ENV||'' ENVIRONMENT FOR THE JOB ID ''||:JOB_ID||'' AT ''||'' ^ ''|| 
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE (''America/Chicago'', CURRENT_TIMESTAMP(5))): 

/* CREATES TEMPORARY TABLE SUPPLY_CHAIN TEMP_QLTY SAT_ONET WITH FULL SET OF DATA TO LOAD TARGET TABLE */

SAT_REC_STR :=  ''CREATE OR REPLACE TEMPORARY TABLE 
SCDP_DW_''||:ENV||''_DB.SUPPLY_CHAIN.TEMP_QLTY_SAT_QNET AS

SELECT
SHA2 (CONCAT(
IFNULL((UPPER(SRC_SYS_NM)),''''''''),''''_'''',
IFNULL((UPPER(PO_NO)),''''''''),''''_'''',
IFNULL((UPPER(RCVG_FAC_CD)),''''''''),''''_'''',
IFNULL((UPPER(BUY_FAC_CD)),''''''''),''''_'''',
IFNULL(TRIM(UPPER(RCVG_PLT_CD)),''''''''),''''_'''',
--IFNULL(TRIM(UPPER (QLTY_DT)),''''''''),''''_'''',
--IFNULL(TRIM(UPPER(SUPP_CD))),''''''''),''''_'''',
IFNULL(TRIM(UPPER(MATL_CD)),''''''''),''''_'''',
IFNULL(TRIM(UPPER(CAT_ID_NO)),''''''''),''''_'''',
IFNULL(TRIM(UPPER(ORG_LOC_SEQ_NO)),''''''''),''''_'''',
IFNULL(TRIM(UPPER(TRN_DT)),''''''''))) AS QLTY_HUB_KEY,
ISRT_DT_TM,
SRC_SYS_NM,
CAL_QTR,
REJ_MO_DT,
UNIT_COST,
RCVD_PC_QTY,
RCVG_REJ_PC_QTY,
SALV_REJ_PC_QTY,
TOT_REJ_PC_QTY,
RWRK_PC_QTY,
RTN_PC_QTY,
DEV_PC_QTY,
RCVD_DOL,
RCVG_REJ_DOL,
SALV_REJ_DOL,
TOT_REJ_DOL,
RWRK_DOL,
RTN_DOL,
DEV_DOL,
RCVD_LOT_QTY,
RCVG_REJ_LOT_QTY,
TOT_REJ_LOT_QTY,
REJ_NO_DEV_PCT,
TOT_DEV_PCT,
REJ_PER_THOU,
NO_DEV_PER_THOU,
DEV_PER_THOU,
BUYER_CD,
DSK_CD,
COST_RTRVL_IND,
UM_ABR,
RGH_WT_CNVRT_IND,
CCY_CD_CNVRT_IND,
UM_CNVRT_IND,
ON_SIZE_CNVRT_IND,
OUT_OF_BNDRY_IND,
ADJ_PRC_USED_IND,
COR_APLY_IND,
CNVRT_ERR_IND,
SUPP_DEL_TO_CD,
CEN_SRC_FAC_CD,
ADJ_RCVD_PC_QTY,
ADJ_REJ_PC_QTY,
ADJ_REJ_PER_THOU,
OTH_REJ_PC_QTY,
OTH_REJ_DOL,
RCVG_ORG_CD,
SRC_FAC_CD,
SRC_FOC_GRP_ORG,
ID_BUYER_CD,
CEN_SRC_ORG_CD,
SHA2 (CONCAT(IFNULL((UPPER(SRC_SYS_NM)),''''''''),''''_'''',
IFNULL((UPPER(CAL_QTR)),''''''''),''''_'''',
IFNULL((UPPER(REJ_MO_DT)),''''''''),''''_'''',
IFNULL((UPPER(UNIT_COST)),''''''''),''''_'''',
IFNULL((UPPER(RCVD_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(RCVG_REJ_PC_QTY),''''''''),''''_'''',
IFNULL((UPPER(SALV_REJ_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(TOT_REJ_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(RWRK_PC_QTY),''''''''),''''_'''',
IFNULL((UPPER(RTN_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(DEV_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(RCVD_DOL)),''''''''),''''_'''',
IFNULL((UPPER (RCVG_REJ_DOL)),''''''''),''''_'''',
IFNULL((UPPER(SALV_REJ_DOL)),''''''''),''''_'''',
IFNULL((UPPER(TOT_REJ_DOL)),''''''''),''''_'''',
IFNULL((UPPER(RWRK_DOL)),''''''''),''''_'''',
IFNULL((UPPER(RTN_DOL)),''''''''),''''_'''',
IFNULL((UPPER(DEV_DOL)),''''''''),''''_'''',
IFNULL((UPPER(RCVD_LOT_QTY)),''''''''),''''_'''',
IFNULL((UPPER (RCVG_REJ_LOT_QTY)),''''''''),''''_'''',
IFNULL((UPPER(TOT_REJ_LOT_QTY)),''''''''),''''_'''',
IFNULL((UPPER (REJ_NO_DEV_PCT)),''''''''),''''_'''',
IFNULL((UPPER(TOT_DEV_PCT)),''''''''),''''_'''',
IFNULL((UPPER (REJ_PER_THOU)),''''''''),''''_'''',
IFNULL((UPPER (NO_DEV_PER_THOU)),''''''''),''''_'''',
IFNULL((UPPER (DEV_PER_THOU)),''''''''),''''_'''',
IFNULL((UPPER (BUYER_CD)),''''''''),''''_'''',
IFNULL((UPPER (DSK_CD)),''''''''),''''_'''',
IFNULL((UPPER(COST_RTRVL IND)),''''''''),''''_'''',
IFNULL((UPPER(UM_ABR))),''''''''),''''_'''',
IFNULL((UPPER(RGH_WT_CNVRT_IND)),''''''''),''''_'''',
IFNULL((UPPER(CCY_CD_CNVRT_IND)),''''''''),''''_'''',
IFNULL((UPPER(UM_CNVRT_IND)),''''''''),''''_'''',
IFNULL((UPPER(ON_SIZE_CNVRT_IND)),''''''''),''''_'''',
IFNULL((UPPER(OUT_OF_BNDRY_IND)),''''''''),''''_'''',
IFNULL((UPPER(ADJ_PRC_USED_IND)),''''''''),''''_'''',
IFNULL((UPPER (COR_APLY_IND)),''''''''),''''_'''',
IFNULL((UPPER(CNVRT_ERR_IND)),''''''''),''''_'''',
IFNULL((UPPER(SUPP_DEL_TO_CD)),''''''''),''''_'''',
IFNULL((UPPER(CEN_SRC_FAC_CD)),''''''''),''''_'''',
IFNULL((UPPER(ADJ_RCVD_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(ADJ_REJ_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(ADJ_REJ_PER_THOU)),''''''''),''''_'''',
IFNULL((UPPER(OTH_REJ_PC_QTY)),''''''''),''''_'''',
IFNULL((UPPER(OTH_REJ_DOL)),''''''''),''''_'''',
IFNULL((UPPER(RCVG_ORG_CD)),''''''''),''''_'''',
IFNULL((UPPER(SRC_FAC_CD)),''''''''),''''_'''',
IFNULL((UPPER(SRC_FOC_GRP_ORG)),''''''''),''''_'''',
IFNULL((UPPER(ID_BUYER_CD)),''''''''),''''_'''',
IFNULL((UPPER(CEN_SRC_ORG_CD)),''''''''),''''_'''',

)as HASH_VAL
FROM (
SELECT distinct
RCPT.FOR_PO_NO AS PO_NO,
RCPT.RCVG_FAC_CD AS RCVG_FAC_CD,
RCPT.BUY_FAC_CD AS BUY_FAC_CD.
--RCPT_OLTY_DT AS QLTY_DT.
--RCPT_SUPP_CD AS SUPP_CD,
RCPT_MATL_CD AS MATL_CD,
DSGN_CAT_ID_NO  AS CAT_ID NO,
RCPT_ORG_LOC_SEQ_NO AS ORG_LOC_SEQ_NO,
RCPT_TRN_DT AS TRN_DT,
COALESCE(
EPDP.RCVG_PLT_CD,
SPLIT_PART(NN_PLT_CD.NTWK_NODE_ID,''''_'''',3),
RCPT_RCVG_FAC_CD) AS RCVG_PLT_CD,
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''''America/Chicago'''', CURRENT_TIMESTAMP(5))) AS ISRT_DT_TM,
COALESCE(
    EPDP.SRC_SYS_NM,
    NN_SRC_SYS.SRC_SYS_NM,
    ''''QNET'''') AS SRC_SYS_NM,
    RCPT.CAL_QTR AS CAL_QTR,
LAST_DAY(MATL_REJ.REJ_DT - INTERVAL ''''1 MONTH'''') + INTERVAL ''''1 DAY'''' AS REJ_MO_DT,
RCPT.UNIT_COST AS UNIT_COST,
RCPT.RCVD_PC_CT AS RCVD_PC_QTY,
RCPT.RCVG_REJ_PC_CT AS RCVG_REJ_PC_QTY,
RCPT.SALV_REJ_PC_CT AS SALV_REJ_PC_QTY,
RCPT.TOT_REJ_PC_CT AS TOT_REJ_PC_QTY,
RCPT.RWRK_PC_CT AS RWRK_PC_QTY,
RCPT.RTN_PC_CT AS RTN_PC_QTY,
RCPT.DEV_PC_CT AS DEV_PC_QTY,
RCPT.RCVD_DOL AS RCVD_DOL,
RCPT.RCVG_REJ_DOL AS RCVG_REJ_DOL,

RCPT.SALV_REJ_DOL AS SALV_REJ_DOL,
RCPT.TOT_REJ_DOL AS TOT_REJ_DOL,
RCPT.RWRK_DOL AS RWRK_DOL,
RCPT.RTN_DOL AS RTN_DOL,
RCPT.DEV_DOL AS DEV_DOL,
RCPT.RCVD_LOT_CT AS RCVD_LOT_QTY,
RCPT.RCVG_REJ_LOT_CT AS RCVG_REJ_LOT_QTY,
RCPT.TOT_REJ_PCT AS TOT_REJ_LOT_QTY,
RCPT.REJ_NO_DEV_PCT AS REJ_NO_DEV_PCT,
RCPT.TOT_DEV_PCT AS TOT_DEV_PCT,
RCPT.REJ_PER_THOU AS REJ_PER_THOU,
RCPT.NO_DEV_PER_THOU AS NO_DEV_PER_THOU,
RCPT.DEV_PER_THOU AS DEV_PER_THOU,
RCPT.BUYER_CD AS BUYER_CD.
RCPT.DSK_CD AS DSK_CD,
RCPT.COST_RTRVL_IND AS COST_RTRVL_IND,
RCPT.UM_ABR AS UM_ABR,
RCPT.RGH_WT_CNVRT_IND AS RGH_WT_CNVRT_IND,
RCPT.CCY_CD_CNVRT_IND AS CCY_CD_CNVRT_IND,
RCPT.UM_CNVRT_IND AS UM_CNVRT_IND,
RCPT.ON_SIZE_CNVRT_IND AS ON_SIZE_CNVRT_IND
RCPT.OUT_OF_BNDRY_IND AS OUT_OF_BNDRY_IND,
RCPT.ADJ_PRC_USED_IND AS ADJ_PRC_USED_IND,
RCPT.COR APLY_IND AS UM_CNVRT_IND,
RCPT.CNVRT_ERR_IND AS CNVRT_ERR_IND,
RCPT.SUPP_DEL_TO_CD AS SUPP_DEL_TO_CD,
RCPT.CEN_SRC_FAC_CD AS CEN_SRC_FAC_CD,
RCPT.ADJ_RCVD_PC_CT AS ADJ_RCVD_PC_QTY,
RCPT.ADJ_REJ_PC_CT AS ADJ_REJ_PC_QTY,
RCPT.ADJ_REJ_PER_THOU AS ADJ_REJ_PER_THOU,
RCPT.OTH_REJ_PC_CT AS OTH_REJ_PC_QTY,
RCPT.OTH_REJ_DOL AS OTH_REJ_DOL,
RCPT.RCVG_ORG_CD AS RCVG_ORG_CD,

RCPT.SRC_FAC_CD AS SRC_FAC_CD,
RCPT.SRC_FOC_GRP_ORG AS SRC_FOC_GRP_ORG,
RCPT.ID_BUYER_CD AS ID_BUYER_CD,
RCPT.CEN_SRC_ORG_CD AS CEN_SRC_ORG_CD,
FROM
SCDP_DL_DEV_DB.DB2.Z1QN001$_QNET_FAC_MO_RCPT_REJ_VW RCPT
LEFT JOIN (SELECT SRC_SYS_NM
        ,RCVG_PLT_CD
        ,PO_NO
        ,ITM_NO
        ,RCVG_FAC_CD
        ,CNT
FROM
(
SELECT
 SRC_SYS_NM
,RCVG_PLT_CD
,PO_NO
,ITM_NO
,RCVG_FAC_CD
,COUNT_IF(TRUE) OVER(PARTITION BY PO_NO, ITM_NO, RCVG_FAC_CD) AS CNT
FROM SCDP_DW_DEV_DB.PROCUREMENT.EPDP_PO_DM_VW
)T WHERE T.CNT=1) EPDP
ON (RCPT FOR_PO_NO=EPDP.PO_NO
    AND RCPT.RCVG_FAC_CD=EPDP.RCVG_FAC_CD
    )
LEFT JOIN
SCDP_DL_DEV_DB.DB2.Z1QN001$_QNET_MATL_REJ_VW MATL_REJ
    ON MATL_REJ.CHRG_AGNST_PO_NO=EPDP.PO_NO
LEFT JOIN
SCDP_DL_DEV_DB.DB2.Z1QN001$_QNET_CAT_ITM_DSGN_VW DSGN
    ON MATL_REJ.FOR_CID_TAG = DSGN.CID_TAG
LEFT JOIN

SCDP_DW_DEV_DB.NETWORK_NODE_BDV.BDV_NTWK_NODE_HUB AS NN_SRO_SYS ON (RCPT.RCVG_FAC_CD = SPLIT_PART(NN_SRC_SYS.NTWK_NODE_ID,''''_'''' ,3) AND NN_SRC_SYS.CTGRY_LVL_1_TYP = ''''FACILITY'''')

LEFT JOIN
SCDP_DW_DEV_DB.NETWORK_NODE_BDV.NTWK_NODE_RELATIONSHIP_VW AS NN_PLT_CD ON (
RCPT.RCVG_FAC_CD =  SPLIT_PART(NN_PLT_CD.NTWK_NODE_ID,''''_'''' ,3) AND NN_PLT_CO.CTGRY LVL_1_TYP =  ''''PLANT'''')
)
SRC'';

EXECUTE IMMEDIATE SAT_REC_STR:

LOG_STR := LOG_STR||'' ~ ''||''CREATED TEMPORARY TABLE 
TEMP_QLTY_SAT_QNET WITH FULL DATASET FROM SOURCE TABLES 
,FOR SUPPLY_CHAIN.QLTY_SAT''||'' ^ ''||TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'',CURREN_TIMESTAMP(5))):

/* INSERTS NEW RECORDS BASED ON QLTY SAT INTO SUPPLY CHAIN OLTY SAT TARGET TABLE */

SAT_INS_STR := ''MERGE INTO SCDP_DW_''||:ENV||''_DB.SUPPLY_CHAIN.QLTY_SAT TGT USING SCDP_DW_''||:ENV||''_DB.SUPPLY_CHAIN.TEMP_QLTY_SAT_QNET SRC ON SRC.QLTY_HUB_KEY =  TGT.QLTY_HUB_KEY AND TO_DATE(TGT.OBS_DT_TM)=''''9999-12-31''''
WHEN NOT MATCHED THEN

INSERT (QLTY_HUB_KEY,
ISRT_DT_TM,
SRC_SYS_NM,
CAL_QTR,
REJ_MO_DT,
UNIT_COST,
RCVD_PC_QTY,
RCVG_REJ_PC_QTY,
SALV_REJ_PC_QTy,

TOT_REJ_PC_QTY,
RWRK_PC_QTY,
RTN_PC_QTY,
DEV_PC_QTY,
RCVD_DOL,
RCVG_REJ_DOL,
SALV_REJ_DOL,
TOT_REJ_DOL,
RWRK DOL,
RTN_DOL,
DEV_DOL,
RCVD_LOT_QTY,
RCVG_REJ_LOT_QTY,
TOT_REJ_LOT_QTY,
REJ_NO_DEV_PCT,
TOT_DEV_PCT,
REJ_PER_THOU,
NO_DEV_PER_THOU,
DEV_PER_THOU,
BUYER_CD,
DSK_CD,
COST_RTRVL_IND,
UM_ABR,
RGH_WT_CNVRT_IND.
CCY_CD_CNVRT_IND,
UM_CNVRT_IND,
ON_SIZE_CNVRT_IND,
OUT_OF_BNDRY_IND,
ADJ_PRC_USED_IND,
COR_APLY_IND,
CNVRT_ERR_IND,
SUPP_DEL_TO_CD,
CEN_SRC_FAC_CD,

ADJ_RCVD_PC_QTY,
ADJ_REJ_PC_QTY,
ADJ_REJ_PER_THOU,
OTH_REJ_PC_QTY,
OTH_REJ_DOL,
RCVG_ORG_CD,
SRC_FAC_CD,
SRC_FOC_GRP_ORG,
ID_BUYER_CD,
CEN_SRC_ORG_CD,
ISRTED_BY,
UPDTED_BY,
UPDT_DT_TM,
EFF_DT_TM,
OBS_DT_TM,
JOB_ID,
HASH_VAL
)
VALUES (SRC.QLTY_HUB_KEY
SRC.ISRT_DT_TM,
SRC.SRC_SYS_NM,
SRC.CAL_QTR,
SRC.REJ_MO_DT,
SRC.UNIT_COST,
SRC.RCVD_PC_QTY,
SRC.RCVG_REJ_PC_QTY,
SRC.SALV_REJ_PC_QTY,
SRC.TOT_REJ_PC_QTY,
SRC.RWRK_PC_QTY,
SRC.RTN_PC_QTY,
SRC.DEV_PC_QTY,
SRC.RCVD_DOL,
SRC.RCVG REJ_DOL,

SRC.SALV_REJ_DOL,
SRC.TOT_REJ_DOL,
SRC.RWRK_DOL,
SRC.RTN_DOL,
SRC.DEV_DOL,
SRC.RCVD_LOT_QTY,
SRC.RCVG_REJ_LOT_QTY,
SRC.TOT_REJ_LOT_QTY,
SRC.REJ_NO_DEV_PCT,
SRC.TOT_DEV_PCT,
SRC.REJ_PER_THOU,
SRC.NO_DEV_PER_THOU,
SRC.DEV_PER_THOU,
SRC.BUYER_CD,
SRC.DSK_CD,
SRC.COST_RTRVL_IND,
SRC.UM_ABR,
SRC.RGH_WT_CNVRT_IND,
SRC.CCY_CD_CNVRT_IND,
SRC.UM_CNVRT_IND,
SRC.ON_SIZE_CNVRT_IND,
SRC.OUT_OF_BNDRY_IND,
SRC.ADJ PRC_USED_IND,
SRC.COR_APLY_IND,
SRC.CNVRT_ERR_IND,
SRC.SUPP_DEL_TO_CD,
SRC.CEN_SRC_FAC_CD,
SRC.ADJ_RCVD_PC_QTY,
SRC.ADJ_REJ_PC_QTY,
SRC.ADJ_REJ_PER_THOU,
SRC.OTH_REJ_PC_QTY,
SRC.OTH_REJ_DOL,
SRC.RCVG_ORG_CD,


SRC.SRC_FAC_CD,
SRC.SRC_FOC_GRP_ORG,
SRC.ID_BUYER_CD,
SRC.CEN_SRC_ORG_CD,
CURRENT_USER(),
NULL,
NULL,
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE (''''America/Chicago'''', CURRENT_TIMESTAMP(5)))
,''''9999-12-31 00:00:00.000''''
,''||:JOB_ID||''
,SRC.HASH_VAL
)
WHEN MATCHED AND SRC.HASH_VAL <> TGT.HASH_VAL THEN

UPDATE SET TGT.UPDTED_BY =  CURRENT_USER(),
TGT.UPDT_DT_TM = 
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''''America/Chicago'''', CURRENT_TIMESTAMP(5))),
TGT.OBS_DT_TM=
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''''America/Chicago'''', CURRENT_TIMESTAMP(5)))
'';

EXECUTE IMMEDIATE SAT_INS_STR;

SELECT $1 INTO ROWCOUNT FROM TABLE (RESULT_SCAN(LAST_QUERY_ID()));

LOG_STR := LOG_STR||'' ~ ''||''INSERTED ''||ROWCOUNT||'' RECORDS IN
SUPPLY_CHAIN.QLTY_SAT''||'' ^ ''|| TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE
(''America/Chicago'', CURRENT_TIMESTAMP(5)));

/*THIS STEP INSERT NEW RECORD IN QLTY_SAT FOR RERUN WHEN HASH_VAL NOT MATCHES */

SAT_INS1_STR := ''MERGE INTO SCDP_DW_''||:ENV||''_DB.SUPPLY_CHAIN.QLTY_SAT TGT 
                                    USING SCDP_DW_''||:ENV||_DB.SUPPLY_CHAIN.TEMP_QLTY_SAT_QNET SRC 
                                        ON SRC.QLTY_HUB_KEY = TGT.QLTY_HUB_KEY 
                                        AND TO_DATE(TGT.OBS_DT_TM)=''''9999-12-31'''' 
                                        AND SRC.HASH_VAL = TGT.HASH_VAL 
                                WHEN NOT MATCHED THEN

INSERT ( QLTY_HUB_KEY,
ISRT_DT_TM ,
SRC_SYS_NM ,
CAL_QTR ,
REJ_MO_DT ,
UNIT_COST ,
RCVD_PC_QTY ,
RCVG_REJ_PC_QTY ,
SALV_REJ_PC_QTY ,
TOT_REJ_PC_QTY ,
RWRK_PC_QTY,
RTN_PC_QTY,
DEV_PC_QTY,
RCVD_DOL,
RCVG_REJ_DOL,
SALV_REJ_DOL,
TOT_REJ_DOL,
RWRK_DOL,
RTN_DOL,
DEV_DOL,
RCVD_LOT_QTY,
RCVG_REJ_LOT_QTY,
TOT_REJ_LOT_QTY,
REJ_NO_DEV_PCT,
TOT_DEV_PCT,
REJ_PER_THOU,
NO_DEV_PER_THOU,
DEV_PER_THOU,
BUYER_CD,
DSK_CD,
COST_RTRVL_IND,
UM_ABR,
RGH_WT_CNVRT_IND,
CCY_CD_CNVRT_IND,
UM_CNVRT_IND,
ON_SIZE_CNVRT_IND,
OUT_OF_BNDRY_IND,
ADJ_PRC_USED_IND,
COR_APLY_IND,
CNVRT_ERR_IND,
SUPP_DEL_TO_CD,
CEN_SRC_FAC_CD,
ADJ_RCVD_PC_QTY,
ADJ_REJ_PC_QTY,
ADJ_REJ_PER_THOU,
OTH_REJ_PC_QTY,
OTH_REJ_DOL,
RCVG_ORG_CD,
SRC_FAC_CD,
SRC_FOC_GRP_ORG,
ID_BUYER_CD,
CEN_SRC_ORG_CD,
ISRTED_BY,
UPDTED_BY,
UPDT_DT_TM,
EFF_DT_TM,
OBS_DT_TM,
JOB_ID,
HASH_VAL
)
VALUES ( SRC.QLTY_HUB_KEY,
SRC.ISRT_DT_TM,
SRC.SRC_SYS_NM,
SRC.CAL_QTR,
SRC.REJ_MO_DT,
SRC.UNIT_COST,
SRC.RCVD_PC_QTY,
SRC.RCVG_REJ_PC_QTY,
SRC.SALV_REJ_PC_QTY,
SRC.TOT_REJ_PC_QTY,
SRC.RWRK_PC_QTY,
SRC.RTN_PC_QTY,
SRC.DEV_PC_QTY,
SRC.RCVD_DOL,
SRC.RCVG_REJ_DOL,
SRC.SALV_REJ_DOL,
SRC.TOT_REJ_DOL,
SRC.RWRK_DOL,
SRC.RTN_DOL,
SRC.DEV_DOL,
SRC.RCVD_LOT_QTY,
SRC.RCVG_REJ_LOT_QTY,
SRC.TOT_REJ_LOT_QTY,
SRC.REJ_NO_DEV_PCT,
SRC.TOT_DEV_PCT,
SRC.REJ_PER_THOU,
SRC.NO_DEV_PER_THOU,
SRC.DEV_PER_THOU,
SRC.BUYER_CD,
SRC.DSK_CD,
SRC.COST_RTRVL_IND,
SRC.UM_ABR,
SRC.RGH_WT_CNVRT_IND,
SRC.CCY_CD_CNVRT_IND,
SRC.UM_CNVRT_IND,
SRC.ON_SIZE_CNVRT_IND,
SRC.OUT_OF_BNDRY_IND,
SRC.ADJ_PRC_USED_IND,
SRC.COR_APLY_IND,
SRC.CNVRT_ERR_IND,
SRC.SUPP_DEL_TO_CD,
SRC.CEN_SRC_FAC_CD,
SRC.ADJ_RCVD_PC_QTY,
SRC.ADJ_REJ_PC_QTY,
SRC.ADJ_REJ_PER_THOU,
SRC.OTH_REJ_PC_QTY,
SRC.OTH_REJ_DOL,
SRC.RCVG_ORG_CD,
SRC.SRC_FAC_CD,
SRC.SRC_FOC_GRP_ORG,
SRC.ID_BUYER_CD,
SRC.CEN_SRC_ORG_CD
,CURRENT_USER()
,NULL
,NULL
,TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE('''' America/Chicago'''', CURRENT_TIMESTAMP(5))) 
,''''9999-12-31 00:00:00.000''''
,''||:JOB_ID||''
,SRC.HASH_VAL 
)
'';

EXECUTE IMMEDIATE SAT_INS1_STR;

SELECT $1 INTO ROWCOUNT FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));

LOG_STR :=  LOG_STR||'' ~ ''||''INSERTED & UPDATE ''||ROWCOUNT||'' RECORDS FOR HASH VALUE CHANGES IN SUPPLY_CHAIN.QLTY_SAT''||'' ^ ''||TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'',CURRENT_TIMESTAMP(5)));

LOG_STR := LOG_STR||'' ~ ''||'' EXECUTION OF SUPPLY_CHAIN.PROC_QLTY_SAT_QNET IS COMPLETED''||'' ^ ''|| TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'',CURRENT TIMESTAMP(5)));

EXECUTE IMMEDIATE ''CALL SCDP_DW_''||:ENV||''_DB.UTIL.PROC_SCDP_PROCESS_LOG(:1,''''SCDP'''',:2,''''PROC_QLTY_SAT_QNET'''',:3,:4,''''SUCCEEDED'''')'' USING (JOB_ID, ENV,LOG_STR, PROCESS_START_TIME);

RETURN ''SUCCESS'';

EXCEPTION

WHEN STATEMENT_ERROR THEN

LOG_STR := LOG_STR||'' ~ ''||''ERROR TYPE STATEMENT_ERROR, SQLCODE - ''||SQLCODE||'', SQLERRM -''||TRANSLATE(SQLERRM,'''''''',''"'')||'''''')''||'' ^ ''||TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP(5)));

EXECUTE IMMEDIATE ''CALL SCDP_DW_''||:ENV||''_DB.UTIL.PROC_SCDP_PROCESS_LOG(:1, ''''SCDP'''',:2,''''PROC_QLTY_SAT_QNET'''',:3,:4, ''''FAILED'''')'' USING (JOB_ID, ENV, LOG_STR, PROCESS_START_TIME);

RETURN OBJECT_CONSTRUCT(''ERROR TYPE'', ''STATEMENT_ERROR'',
''SQLCODE'', SQLCODE,
''SOLERRM'', SQLERRM,
''SQLSTATE'', SQLSTATE);

WHEN EXPRESSION_ERROR THEN

LOG_STR := LOG_STR||'' ~ ''||''ERROR TYPE STATEMENT_ERROR, SQLCODE - ''||SQLCODE||'', SQLERRM -''||TRANSLATE(SQLERRM,'''''''',''"'')||'''''')''||'' ^ ''||TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP(5)));

EXECUTE IMMEDIATE ''CALL SCDP_DW_''||:ENV||''_DB.UTIL.PROC_SCDP_PROCESS_LOG(:1, ''''SCDP'''',:2,''''PROC_QLTY_SAT_QNET'''',:3,:4, ''''FAILED'''')'' USING (JOB_ID, ENV, LOG_STR, PROCESS_START_TIME);

RETURN OBJECT_CONSTRUCT(''ERROR TYPE'', ''STATEMENT_ERROR'',
''SQLCODE'', SQLCODE,
''SOLERRM'', SQLERRM,
''SQLSTATE'', SQLSTATE);

WHEN OTHER THEN

LOG_STR := LOG_STR||'' ~ ''||''ERROR TYPE STATEMENT_ERROR, SQLCODE - ''||SQLCODE||'', SQLERRM -''||TRANSLATE(SQLERRM,'''''''',''"'')||'''''')''||'' ^ ''||TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP(5)));

EXECUTE IMMEDIATE ''CALL SCDP_DW_''||:ENV||''_DB.UTIL.PROC_SCDP_PROCESS_LOG(:1, ''''SCDP'''',:2,''''PROC_QLTY_SAT_QNET'''',:3,:4, ''''FAILED'''')'' USING (JOB_ID, ENV, LOG_STR, PROCESS_START_TIME);

RETURN OBJECT_CONSTRUCT(''ERROR TYPE'', ''STATEMENT_ERROR'',
''SQLCODE'', SQLCODE,
''SOLERRM'', SQLERRM,
''SQLSTATE'', SQLSTATE);

END';

SELECT
SHA2 (CONCAT(
IFNULL((UPPER(SRC_SYS_NM)),''), '_',
IFNULL((UPPER(PO_NO)),''), '_',
IFNULL((UPPER(RCVG_FAC_CD)),''), '_',
IFNULL((UPPER (BUY_FAC_CD)),''), '_',
IFNULL(TRIM(UPPER (RCVG_PLT_CD)),''),'_',
--IFNULL(TRIM (UPPER (QLTY_DT)),''), '_',
--IFNULL(TRIM (UPPER (SUPP_CD)),''), '_',
IFNULL(TRIM(UPPER(MATL_CD)),''),'_',
IFNULL(TRIM(UPPER(CAT_ID_NO)),''),'_',
IFNULL(TRIM(UPPER(ORG_LOC_SEQ_NO)),''), '_',
IFNULL(TRIM(UPPER(TRN_DT)),''))) AS QLTY_HUB_KEY,

ISRT_DT_TM,
SRC_SYS_NM,
UNIT_COST,
RCVD_PC_QTY,
RCVG_REJ_PC_QTY,
SALV_REJ_PC_QTY,
TOT_REJ_PC_QTY,
RWRK_PC_QTY,
RTN_PC_QTY,
DEV_PC_QTY,
RCVD_DOL
RCVG_REJ_DOL,
SALV_REJ DOL,
TOT_REJ_DOL,
RWRK_DOL,
RTN_DOL,
DEV_DOL,
RCVD_LOT_QTY,
RCVG_REJ_LOT_QTY,
TOT_REJ_LOT_QTY,
REJ_NO_DEV_PCT,
TOT_DEV_PCT,
REJ_PER_THOU,
NO_DEV_PER_THOU,
DEV_PER_THOU,
BUYER_CD,
DSK_CD,
COST_RTRVL_IND,
UM_ABR,
RGH_WT_CNVRT_IND,
CCY_CD_CNVRT_IND,
UM_CNVRT_IND,
ON_SIZE_CNVRT_IND,
OUT_OF_BNDRY_IND,
ADJ_PRC_USED_IND,
COR_APLY_IND,
CNVRT_ERR_IND,
SUPP_DEL_TO_CD,
CEN_SRC_FAC_CD,
ADJ_RCVD_PC_QTY,
ADJ_REJ_PC_QTY,
ADJ_REJ_PER_THOU,
OTH_REJ_PC_QTY,
OTH_REJ_DOL,
RCVG_ORG_CD,
SRC_FAC_CD,
SRC_FOC_GRP_ORG,
ID_BUYER_CD,
CEN_SRC_ORG_CD,
NULL AS HASH_VAL
FROM (
SELECT
RCPT.FOR_PO_NO AS PO_NO,
RCPT.RCVG_FAC_CD    AS RCVG_FAC_CD,
RCPT.BUY_FAC_CD     AS BUY_FAC_CD,
--RCPT.QLTY_DT      AS QLTY_DT,
--RCPT.SUPP_CD      AS SUPP_CD,
RCPT.MATL_CD        AS MATL_CD,
DSGN.CAT_ID_NO      AS CAT_ID_NO,
RCPT.ORG_LOC_SEQ_NO AS ORG_LOC_SEQ_NO,
RCPT.TRN_DT         AS TRN DT,
COALESCE(
        EPDP.RCVG_PLT_CD,
        SPLIT_PART (NN_PLT_CD.NTWK_NODE_ID,'_',3),
        RCPT.RCVG_FAC_CD) AS RCVG_PLT_CD,
TO_TIMESTAMP_NTZ(CONVERT_TIMEZONE('America/Chicago', CURRENT_TIMESTAMP(5))) AS ISRT_DT_TM,
COALESCE(
       EPDP.SRC_SYS_NM,
       NN_SRC_SYS.SRC_SYS_NM,
       'QNET') AS SRC_SYS_NM,
RCPT.CAL_QTR AS CAL_QTR,
LAST_DAY(MATL_REJ.REJ_DT - INTERVAL '1 MONTH') + INTERVAL '1 DAY' AS REJ_MO_DT,
RCPT.UNIT_COST        AS UNIT_COST,
RCPT.RCVD_PC_CT       AS RCVD_PC_QTY,
RCPT.RCVG_REJ_PC_CT   AS RCVG_REJ_PC_QTY,
RCPT.SALV_REJ_PC_CT   AS SALV_REJ_PC_QTY,
RCPT.TOT_REJ_PC_CT    AS TOT_REJ_PC_QTY,
--RCPT.RWRK_PC_CT          AS RWRK_PC_QTY,
--RCPT.RTN_PC_CT           AS RTN_PC_QTY, 
RCPT.DEV_PC_CT       AS DEV_PC_QTY,
RCPT.RCVD_DOL        AS RCVD_DOL,
RCPT.RCVG_REJ_DOL    AS RCVG_REJ_DOL,
RCPT.SALV_REJ_DOL    AS SALV_REJ_DOL,
RCPT.TOT_REJ_DOL     AS TOT_REJ_DOL,
RCPT.RWRK_DOL        AS RWRK_DOL,
ROPT.RTN_DOL         AS RTN_DOL,
RCPT.DEV_DOL         AS DEV_DOL, 
RCPT.RCVD_LOT_CT     AS RCVD_LOT_QTY,
RCPT.RCVG_REJ_LOT_CT AS RCVG_REJ_LOT_QTY,
RCPT.TOT_REJ_PCT     AS TOT_REJ_LOT_QTY,
RCPT.REJ_NO_DEV_PCT  AS REJ_NO_DEV_PCT,
RCPT.TOT_DEV_PCT     AS TOT_DEV_PCT,
RCPT.REJ_PER_THOU    AS REJ_PER_THOU,
RCPT.NO_DEV_PER_THOU AS NO_DEV_PER_THOU,
RCPT.DEV_PER_THOU    AS DEV_PER_THOU,
RCPT.BUYER_CD        AS BUYER_CD,
RCPT.DSK_CD          AS DSK CD,
RCPT.COST_RTRVL_IND  AS COST_RTRVL_IND,
RCPT.UM_ABR          AS UM_ABR,
RCPT.RGH_WT_CNVRT_IND AS RGH_WT_CNVRT_IND,
RCPT.CCY_CD_CNVRT_IND AS CCY_CD_CNVRT_IND,
RCPT.UM_CNVRT_IND    AS UM_CNVRT_IND,
RCPT.ON_SIZE_CNVRT_IND AS ON_SIZE_CNVRT_IND,
RCPT.OUT_OF_BNDRY_IND  AS OUT_OF_BNDRY_IND,
RCPT.ADJ_PRC_USED_IND  AS ADJ_PRC_USED_IND,
RCPT.COR_APLY_IND      AS COR_APLY_IND,
RCPT.CNVRT_ERR_IND     AS CNVRT_ERR_IND, 
RCPT.SUPP_DEL_TO_CD    AS SUPP_DEL_TO_CD,
RCPT.CEN_SRC_FAC_CD    AS CEN_SRC_FAC_CD,
RCPT.ADJ_RCVD_PC_CT    AS ADJ_RCVD_PC_QTY,
RCPT.ADJ_REJ_PC_CT     AS ADJ_REJ_PC_QTY,
RCPT.ADJ_REJ_PER_THOU  AS ADJ_REJ_PER_THOU,
RCPT.OTH_REJ_PC_CT     AS OTH_REJ_PC_QTY,
RCPT.OTH_REJ_DOL       AS OTH_REJ_DOL,
RCPT.RCVG_ORG_CD       AS RCVG_ORG_CD,
RCPT.SRC_FAC_CD        AS SRC_FAC_CD,
RCPT.SRC_FOC_GRP_ORG   AS SRC_FOC_GRP_ORG,
RCPT.ID_BUYER_CD       AS ID_BUYER_CD,
RCPT.CEN_SRC_ORG_CD    AS CEN_SRC_ORG_CD,

FROM

SCDP_DL_DEV_DB.DB2.Z1QN001S_QNET_FAC_MO_RCPT_REJ_VW RCPT
LEFT JOIN (SELECT SRC_SYS_NM
, RCVG_PLT_CD
, PO_NO
, ITM_NO
, RCVG_FAC_CD
, CNT

FROM
(
SELECT

SRC_SYS_NM
, RCVG_PLT_CD
, PO_NO
, ITM_NO
, RCVG_FAC_CD
, COUNT_IF(TRUE) OVER(PARTITION BY PO_NO, ITM_NO, RCVG_FAC_CD) AS CNT

FROM SCDP_DW_DEV_DB.PROCUREMENT.EPDP_PO_DM_VW

--limit 1

) T WHERE T.CNT=1) EPDP
ON (RCPT.FOR_PO_NO=EPDP.PO_NO
AND RCPT.RCVG_FAC_CD=EPDP.RCVG_FAC_CD 
)
LEFT JOIN
SCDP_DL_DEV_DB.DB2.Z1QN001$_QNET_MATL_REJ_VW MATL_REJ
ON MATL_REJ.CHRG_AGNST_PO_NO=EPDP.PO_NO
LEFT JOIN SCDP_DL_DEV_DB.DB2.Z1QN001$_QNET_CAT_ITM_DSGN_VW DSGN
ON MATL_REJ.FOR_CID_TAG = DSGN.CID_TAG
LEFT JOIN
SCDP_DW_DEV_DB.NETWORK_NODE_BDV.BDV_NTWK_NODE_HUB AS NN_SRC_SYS ON (RCPT.RCVG_FAC_CD = SPLIT_PART (NN_SRC_SYS.NTWK_NODE_ID,'_' 3)
AND NN_SRC_SYS.CTGRY_LVL_1_TYP = 'FACILITY')
lEFT JOIN
SCDP_DW_DEV_DB.NETWORK_NODE_BDV.BDV_NTWK_NODE_RELATIONSHIP_VW AS NN_PLT_CD
ON (RCPT.RCVG_FAC_CD = SPLIT_PART (NN_PLT_CD.NTWK_NODE_ID,'_',3)
AND NN_PLT_CD.CTGRY_LVL_1_TYP = 'PLANT')
) SRC;





















